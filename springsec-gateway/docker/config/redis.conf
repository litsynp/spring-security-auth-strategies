################################## SECURITY ###################################

# Require clients to issue AUTH <PASSWORD> before processing any other
# commands.  This might be useful in environments in which you do not trust
# others with access to the host running redis-server.
#
# This should stay commented out for backward compatibility and because most
# people do not need auth (e.g. they run their own servers).
#
# Warning: since Redis is pretty fast an outside user can try up to
# 150k passwords per second against a good box. This means that you should
# use a very strong password otherwise it will be very easy to break.
#
# requirepass foobared

# Command renaming.
#
# It is possible to change the name of dangerous commands in a shared
# environment. For instance the CONFIG command may be renamed into something
# hard to guess so that it will still be available for internal-use tools
# but not available for general clients.
#
# Example:
#
# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52
#
# It is also possible to completely kill a command by renaming it into
# an empty string:
#
# rename-command CONFIG ""
#
# Please note that changing the name of commands that are logged into the
# AOF file or transmitted to slaves may cause problems.

# 1. Other optimizations
# 1-1. Set max clients
maxclients 50000

# 2. Disable some features for production (optimization for Redis as a cache server only)
# - REF: https://stackoverflow.com/questions/28785383/how-to-disable-persistence-with-redis
# - REF: https://programmer.group/redis-disable-dangerous-command.html

# 2-1.Disable AOF
# If needed, turn back on if the server is on replica (secondary)
appendonly no

# 2-2. Disable RDB snapshots
# If needed, turn back on if the server is on replica (secondary)
save ""

# 2-3. Disable dangerous commands
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command KEYS ""
rename-command DEBUG ""
rename-command SAVE ""
